/*
 * Copyright (C) 2012 Texas Instruments Incorporated - http://www.ti.com/
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License version 2 as
 * published by the Free Software Foundation.
 */
/dts-v1/;

#include "am33xx.dtsi"
#include "am33xx-es2.dtsi"


#include "am335x-agv-common.dtsi"

/ {
	model = "TI AM335x AGV";
	compatible = "ti,am335x-agv", "ti,am33xx";

/*
	clk_mcasp0: clk_mcasp0 {
		#clock-cells = <0>;
		compatible = "fixed-clock";
		clock-frequency = <12000000>;
	};
*/
	
	sound {
		compatible = "simple-audio-card";
		simple-audio-card,name = "Audio-3104";
		simple-audio-card,widgets =
			"Headphone", "Headphone Jack",
			"Line", "Line In";
		simple-audio-card,routing =
			"Headphone Jack",       "HPLOUT",
			"Headphone Jack",       "HPROUT",
			"LINE1L",               "Line In",
			"LINE1R",               "Line In";
		simple-audio-card,format = "dsp_b";
		simple-audio-card,bitclock-master = <&sound_master>;
		simple-audio-card,frame-master = <&sound_master>;
		simple-audio-card,bitclock-inversion;

		simple-audio-card,cpu {
			sound-dai = <&mcasp0>;
		};

		sound_master: simple-audio-card,codec {
			#sound-dai-cells = <0>;
			sound-dai = <&tlv320aic3104>;
/*
			clocks = <&clk_mcasp0>;
			clock-names = "mclk";
*/
			system-clock-frequency = <12000000>;
		};
	};
};

&ldo3_reg {
	regulator-min-microvolt = <1800000>;
	regulator-max-microvolt = <1800000>;
	regulator-always-on;
};

&mmc1 {
	vmmc-supply = <&vmmcsd_fixed>;
};

&uart1 {
	pinctrl-names = "default";
	pinctrl-0 = <&uart1_pins>;
	status = "okay";
};

&uart2 {
	pinctrl-names = "default";
	pinctrl-0 = <&uart2_pins>;
	status = "okay";
};

&uart3 {
	pinctrl-names = "default";
	pinctrl-0 = <&uart3_pins>;
	status = "okay";
	rts-gpio = <&gpio2 24 GPIO_ACTIVE_HIGH>;
	rs485-rts-active-high;
	rs485-rts-delay = <0 0>;
	linux,rs485-enabled-at-boot-time;
};

&uart4 {
	pinctrl-names = "default";
	pinctrl-0 = <&uart4_pins>;
	status = "okay";
};

&uart5 {
	pinctrl-names = "default";
	pinctrl-0 = <&uart5_pins>;
	status = "okay";
};

&elm {
	status = "okay";
};

&gpmc {
	status = "okay";
	pinctrl-names = "default";
	pinctrl-0 = <&gpmc_pins>;
	ranges = <0 0 0x08000000 0x1000000>,	/* CS0: 16MB for NAND */
			 <1 0 0x10000000 0x1000000>;	/* CS1: 16MB for fpga */
	nand@0,0 {
		reg = <0 0 4>; /* CS0, offset 0, IO size 4 */
		ti,nand-ecc-opt = "bch16";
		ti,elm-id = <&elm>;
		nand-bus-width = <8>;
		gpmc,device-width = <1>;
		gpmc,sync-clk-ps = <0>;
		gpmc,cs-on-ns = <0>;
		gpmc,cs-rd-off-ns = <44>;
		gpmc,cs-wr-off-ns = <44>;
		gpmc,adv-on-ns = <6>;
		gpmc,adv-rd-off-ns = <34>;
		gpmc,adv-wr-off-ns = <44>;
		gpmc,we-on-ns = <0>;
		gpmc,we-off-ns = <40>;
		gpmc,oe-on-ns = <0>;
		gpmc,oe-off-ns = <54>;
		gpmc,access-ns = <64>;
		gpmc,rd-cycle-ns = <82>;
		gpmc,wr-cycle-ns = <82>;
		gpmc,wait-on-read = "true";
		gpmc,wait-on-write = "true";
		gpmc,bus-turnaround-ns = <0>;
		gpmc,cycle2cycle-delay-ns = <0>;
		gpmc,clk-activation-ns = <0>;
		gpmc,wait-monitoring-ns = <0>;
		gpmc,wr-access-ns = <40>;
		gpmc,wr-data-mux-bus-ns = <0>;
		/* gpmc,device-nand = "true"; */
		/* MTD partition table */
		/* All SPL-* partitions are sized to minimal length
		 * which can be independently programmable. For
		 * NAND flash this is equal to size of erase-block */
		#address-cells = <1>;
		#size-cells = <1>;
		partition@0 {
			label = "NAND.SPL";
			reg = <0x00000000 0x000080000>;		/* offset, size */
		};
		partition@1 {
			label = "NAND.SPL.backup1";
			reg = <0x00080000 0x00080000>;
		};
		partition@2 {
			label = "NAND.SPL.backup2";
			reg = <0x00100000 0x00080000>;
		};
		partition@3 {
			label = "NAND.SPL.backup3";
			reg = <0x00180000 0x00080000>;
		};
		partition@4 {
			label = "NAND.u-boot-spl-os";
			reg = <0x00200000 0x00080000>;
		};
		partition@5 {
			label = "NAND.u-boot";
			reg = <0x00280000 0x00100000>;
		};
		partition@6 {
			label = "NAND.u-boot-env";
			reg = <0x00380000 0x00080000>;
		};
		partition@7 {
			label = "NAND.u-boot-env.backup1";
			reg = <0x00400000 0x00080000>;
		};
		partition@8 {
			label = "NAND.kernel";
			reg = <0x00480000 0x00A00000>;
		};
		partition@9 {
			label = "NAND.file-system";
			reg = <0x00e80000 0x3F180000>;
		};
	};
	fpga@1,0 {
		reg = <1 0 0x1000000>;		/* CS1, offset 0 */
		bank-width = <2>;
		gpmc,device-width = <2>;
		gpmc,sync-clk-ps = <0>;		/* timings */
		gpmc,cs-on-ns = <0>;
		gpmc,cs-rd-off-ns = <90>;	/* 80 */
		gpmc,cs-wr-off-ns = <80>;	/* 70 */
		gpmc,adv-on-ns = <0>;
		gpmc,adv-rd-off-ns = <0>;
		gpmc,adv-wr-off-ns = <0>;
		gpmc,we-on-ns = <10>;	/* 10 */
		gpmc,we-off-ns = <80>;	/* 70 */
		gpmc,oe-on-ns = <10>;	/* 10 */
		gpmc,oe-off-ns = <80>;	/* 70 */
		gpmc,access-ns = <70>;	/* 60 */
		gpmc,rd-cycle-ns = <80>;	/* 70 */
		gpmc,wr-cycle-ns = <70>;	/* 60 */
		gpmc,wr-access-ns = <10>;	/* 10 */
		#address-cells = <1>;
		#size-cells = <1>;
	};
};

&am33xx_pinmux {
	uart1_pins: pinmux_uart1_pins {
		pinctrl-single,pins = <
			/* uart1_txd.uart1_txd */
			AM33XX_IOPAD(0x984, PIN_OUTPUT_PULLDOWN | MUX_MODE0)
			/* uart1_rxd.uart1_rxd */
			AM33XX_IOPAD(0x980, PIN_INPUT_PULLUP | MUX_MODE0)
		>;
	};
	uart2_pins: pinmux_uart2_pins {
		pinctrl-single,pins = <
			/* spi0_d0.uart2_txd */
			AM33XX_IOPAD(0x954, PIN_OUTPUT_PULLDOWN | MUX_MODE1)
			/* spi0_clk.uart2_rxd */
			AM33XX_IOPAD(0x950, PIN_INPUT_PULLUP | MUX_MODE1)
		>;
	};
	uart3_pins: pinmux_uart3_pins {
		pinctrl-single,pins = <
			/* lcd_enbkl(eCAP0_in_PWM0_out).uart3_txd */
			AM33XX_IOPAD(0x964, PIN_OUTPUT_PULLDOWN | MUX_MODE1)
			/* spi0_cs1.uart3_rxd */
			AM33XX_IOPAD(0x960, PIN_INPUT_PULLUP | MUX_MODE1)
			/* lcd_pclk GPIO2[24], OUTPUT_PULLDOWN | MODE7 --> UART3_DE */
			AM33XX_IOPAD(0x8E8, PIN_OUTPUT_PULLDOWN | MUX_MODE7)
		>;
	};
	uart4_pins: pinmux_uart4_pins {
		pinctrl-single,pins = <
			/* uart0_rtsn.uart4_txd */
			AM33XX_IOPAD(0x96C, PIN_OUTPUT_PULLDOWN | MUX_MODE1)
			/* uart0_ctsn.uart4_rxd */
			AM33XX_IOPAD(0x968, PIN_INPUT_PULLUP | MUX_MODE1)
		>;
	};
	uart5_pins: pinmux_uart5_pins {
		pinctrl-single,pins = <
			/* lcd_d8.uart5_txd */
			AM33XX_IOPAD(0x8C0, PIN_OUTPUT_PULLDOWN | MUX_MODE4)
			/* lcd_d9.uart5_rxd */
			AM33XX_IOPAD(0x8C4, PIN_INPUT_PULLUP | MUX_MODE4)
		>;
	};
	mmc1_pins: pinmux_mmc1_pins {
		pinctrl-single,pins = <
			AM33XX_IOPAD(0x8E4, PIN_INPUT | MUX_MODE7) /* GPIO2_23 */
		>;
	};
	i2c1_pins: pinmux_i2c1_pins {
		pinctrl-single,pins = <
			AM33XX_IOPAD(0x958, PIN_INPUT_PULLUP | MUX_MODE2)	/* spi0_d1.i2c0_sda */
			AM33XX_IOPAD(0x95c, PIN_INPUT_PULLUP | MUX_MODE2)	/* spi0_cs0.i2c0_scl */
		>;
	};
	audio_pins: pinmux_audio_pins {
		pinctrl-single,pins = <
			0x190 (PIN_INPUT_PULLDOWN | MUX_MODE0)	/* mcasp0_aclkx.mcasp0_aclkx */
			0x194 (PIN_INPUT_PULLDOWN | MUX_MODE0)	/* mcasp0_fsx.mcasp0_fsx, INPUT */
			0x198 (PIN_INPUT_PULLDOWN | MUX_MODE0)	/* mcasp0_axr0.mcasp0_axr0 */
			0x19c (PIN_INPUT_PULLDOWN | MUX_MODE2)	/* mcasp0_ahclkr.mcasp0_axr2 */
			0x1ac (PIN_INPUT_PULLDOWN | MUX_MODE0)	/* MCASP0_AHCLKX -> MCASP0_AHCLKX (I2S_MCLK_OUT)- in */
		>;
	};
	gpmc_pins: pinmux_gpmc_pins {
		pinctrl-single,pins = <
			0x0	(PIN_INPUT_PULLUP | MUX_MODE0)	/* gpmc_ad0.gpmc_ad0 */
			0x4	(PIN_INPUT_PULLUP | MUX_MODE0)	/* gpmc_ad1.gpmc_ad1 */
			0x8	(PIN_INPUT_PULLUP | MUX_MODE0)	/* gpmc_ad2.gpmc_ad2 */
			0xc	(PIN_INPUT_PULLUP | MUX_MODE0)	/* gpmc_ad3.gpmc_ad3 */
			0x10	(PIN_INPUT_PULLUP | MUX_MODE0)	/* gpmc_ad4.gpmc_ad4 */
			0x14	(PIN_INPUT_PULLUP | MUX_MODE0)	/* gpmc_ad5.gpmc_ad5 */
			0x18	(PIN_INPUT_PULLUP | MUX_MODE0)	/* gpmc_ad6.gpmc_ad6 */
			0x1c	(PIN_INPUT_PULLUP | MUX_MODE0)	/* gpmc_ad7.gpmc_ad7 */
			0x70	(PIN_INPUT_PULLUP | MUX_MODE0)	/* gpmc_wait0.gpmc_wait0 */
			/* 0x74	0x37 */	/* gpmc_wpn.gpio0_30 */
			0x7c	(PIN_OUTPUT | MUX_MODE0)	/* gpmc_csn0.gpmc_csn0  */
			0x90	(PIN_OUTPUT | MUX_MODE0)	/* gpmc_advn_ale.gpmc_advn_ale */
			0x94	(PIN_OUTPUT | MUX_MODE0)	/* gpmc_oen_ren.gpmc_oen_ren */
			0x98	(PIN_OUTPUT | MUX_MODE0)	/* gpmc_wen.gpmc_wen */
			0x9c	(PIN_OUTPUT | MUX_MODE0)	/* gpmc_be0n_cle.gpmc_be0n_cle */
			/* for fpga */
			0x20	(PIN_INPUT_PULLUP | MUX_MODE0)	/* gpmc_ad8.gpmc_ad8 MODE0 | INPUT | PULLUP */
			0x24	(PIN_INPUT_PULLUP | MUX_MODE0)	/* gpmc_ad9.gpmc_ad9 MODE0 | INPUT | PULLUP */
			0x28	(PIN_INPUT_PULLUP | MUX_MODE0)	/* gpmc_ad10.gpmc_ad10 MODE0 | INPUT | PULLUP */
			0x2C	(PIN_INPUT_PULLUP | MUX_MODE0)	/* gpmc_ad11.gpmc_ad11 MODE0 | INPUT | PULLUP */
			0x30	(PIN_INPUT_PULLUP | MUX_MODE0)	/* gpmc_ad12.gpmc_ad12 MODE0 | INPUT | PULLUP */
			0x34	(PIN_INPUT_PULLUP | MUX_MODE0)	/* gpmc_ad13.gpmc_ad13 MODE0 | INPUT | PULLUP */
			0x38	(PIN_INPUT_PULLUP | MUX_MODE0)	/* gpmc_ad14.gpmc_ad14 MODE0 | INPUT | PULLUP */
			0x3C	(PIN_INPUT_PULLUP | MUX_MODE0)	/* gpmc_ad15.gpmc_ad15 MODE0 | INPUT | PULLUP */
			0x80	(PIN_OUTPUT | MUX_MODE0)	/* gpmc_cscn1.gpmc_cscn1 MODE0 | OUTPUT */
			0x40	(PIN_OUTPUT | MUX_MODE0)	/* gpmc_a0.gpmc_a0 MODE0 */
			0x44	(PIN_OUTPUT | MUX_MODE0)	/* gpmc_a1.gpmc_a1 MODE0 */
			0x48	(PIN_OUTPUT | MUX_MODE0)	/* gpmc_a2.gpmc_a2 MODE0 */
			0x4C	(PIN_OUTPUT | MUX_MODE0)	/* gpmc_a3.gpmc_a2 MODE0 */
			0x50	(PIN_OUTPUT | MUX_MODE0)	/* gpmc_a4.gpmc_a4 MODE0 */
			0x54	(PIN_OUTPUT | MUX_MODE0)	/* gpmc_a5.gpmc_a5 MODE0 */
			0x58	(PIN_OUTPUT | MUX_MODE0)	/* gpmc_a6.gpmc_a6 MODE0 */
			0x5C	(PIN_OUTPUT | MUX_MODE0)	/* gpmc_a7.gpmc_a7 MODE0 */
			/*0x60	0x08	 gpmc_a8.gpmc_a8 MODE0 */
		>;
	};
	dcan0_pins: pinmux_dcan0_pins {
		pinctrl-single,pins = <
			0x178 0x12 	/* uart1_ctsn, SLEWCTRL_FAST | INPUT_PULLUP | MODE2 | TX */
			0x17c 0x32	/* uart1_rtsn, SLEWCTRL_FAST | RECV_ENABLE | INPUT_PULLUP | MODE2 | RX */
		>;
	};
};

&i2c0 {
	#address-cells = <1>;
	#size-cells = <0>;
	status = "okay";

	ads1115: ads1115@48 {
		compatible = "ti,ads1115";
		status = "okay";
		#address-cells = <1>;
		#size-cells = <0>;
		reg = <0x48>;
		channel@1 {
			reg = <0>;
			ti,gain = <2>;
			ti,datarate = <2>;		// 32 SPS
		};
		channel@2 {
			reg = <3>;
			ti,gain = <1>;
			ti,datarate = <2>;		// 32 SPS
		};
	};
};

&dcan0 {
	status = "okay";
	pinctrl-names = "default";
	pinctrl-0 = <&dcan0_pins>;
};

&mmc1 {
	status = "okay";
	pinctrl-names = "default";
	pinctrl-0 = <&mmc1_pins>;
	cd-gpios = <&gpio2 23 GPIO_ACTIVE_LOW>;
	cd-inverted;
};

&i2c1 {
	clock-frequency = <100000>;
	status = "okay";

	pinctrl-names = "default";
	pinctrl-0 = <&i2c1_pins>;

	tlv320aic3104: tlv320aic3104@18 {
		#sound-dai-cells = <0>;
		compatible = "ti,tlv320aic3104";
		reg = <0x18>;
	};
};

&mcasp0 {
	#sound-dai-cells = <0>;
	pinctrl-names = "default";
	pinctrl-0 = <&audio_pins>;

	status = "okay";
	op-mode = <0>;          /* MCASP_IIS_MODE */
	tdm-slots = <2>;
	num-serializer = <16>;
	serial-dir = <  /* 0: INACTIVE, 1: TX, 2: RX */
		2 0 1 0
		0 0 0 0
		0 0 0 0
		0 0 0 0
	>;
	tx-num-evt = <1>;
	rx-num-evt = <1>;
};
